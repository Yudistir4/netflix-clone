import type { NextPage } from 'next';
import type { NextPageWithLayout } from './_app';
import Head from 'next/head';
import Banner from '../components/Banner';
import Row from '../components/Row';
import requests from '../services/config';
import { Movie } from '../typing';

import { useRequireAuth } from '../hooks/useAuth';
import { ReactElement } from 'react';
import { useRouter } from 'next/router';
import SearchResult from '../components/SearchResult';
import { useRecoilState } from 'recoil';
import { searchState } from '../atoms/modalAtom';
import Layout from '../components/Layout';
interface Props {
  netflixOriginals: Movie[];
  trendingNow: Movie[];
  topRated: Movie[];
  actionMovies: Movie[];
  comedyMovies: Movie[];
  horrorMovies: Movie[];
  romanceMovies: Movie[];
  documentaries: Movie[];
}

const Home: NextPageWithLayout<Props> = ({
  netflixOriginals,
  trendingNow,
  topRated,
  actionMovies,
  romanceMovies,
  documentaries,
  comedyMovies,
  horrorMovies,
}) => {
  useRequireAuth();
  const router = useRouter();
  const [search] = useRecoilState(searchState);

  const movies = [
    { title: 'Trending Now', movies: trendingNow },
    { title: 'Top Rated', movies: topRated },
    { title: 'Action Thriller', movies: actionMovies },
    { title: 'Comedies', movies: comedyMovies },
    { title: 'Scary Movie', movies: horrorMovies },
    { title: 'Romance Movies', movies: romanceMovies },
    { title: 'Documentaries', movies: documentaries },
  ];

  // if (!user) {

  // }

  return (
    <div className=" relative">
      <Head>
        <title>Netflix</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="">
        <Banner netflixOriginals={netflixOriginals} />
        <section className="flex flex-col gap-5 sm:gap-8">
          {movies.map((val) => (
            <Row key={val.title} title={val.title} movies={val.movies} />
          ))}
        </section>
      </main>
    </div>
  );
};

Home.getLayout = function getLayout(page: ReactElement) {
  return <Layout>{page}</Layout>;
};

export default Home;

export const getServerSideProps = async () => {
  const [
    netflixOriginals,
    trendingNow,
    topRated,
    actionMovies,
    comedyMovies,
    horrorMovies,
    romanceMovies,
    documentaries,
  ] = await Promise.all([
    fetch(requests.fetchNetflixOriginals).then((res) => res.json()),
    fetch(requests.fetchTrending).then((res) => res.json()),
    fetch(requests.fetchTopRated).then((res) => res.json()),
    fetch(requests.fetchActionMovies).then((res) => res.json()),
    fetch(requests.fetchComedyMovies).then((res) => res.json()),
    fetch(requests.fetchHorrorMovies).then((res) => res.json()),
    fetch(requests.fetchRomanceMovies).then((res) => res.json()),
    fetch(requests.fetchDocumentaries).then((res) => res.json()),
  ]);

  return {
    props: {
      netflixOriginals: netflixOriginals.results,
      trendingNow: trendingNow.results,
      topRated: topRated.results,
      actionMovies: actionMovies.results,
      comedyMovies: comedyMovies.results,
      horrorMovies: horrorMovies.results,
      romanceMovies: romanceMovies.results,
      documentaries: documentaries.results,
    },
  };
};
