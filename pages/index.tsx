import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import Banner from '../components/Banner'
import MyModal from '../components/MyModal'
import Navbar from '../components/Navbar'
import Row from '../components/Row'
import requests from '../services/config'
import { Movie } from '../typing'

import Section3 from '../components/home/Section3'
import Section4 from '../components/home/Section4'
import Section5 from '../components/home/Section5'
import Tv from '../components/home/Section2'
import Section6 from '../components/home/Section6'
import { ChevronRightIcon } from '@heroicons/react/24/solid'
import useAuth from '../hooks/useAuth'
import Link from 'next/link'
import { FormEvent, useState } from 'react'
import { useRouter } from 'next/router'
interface Props {
  netflixOriginals: Movie[],
  trendingNow: Movie[],
  topRated: Movie[],
  actionMovies: Movie[],
  comedyMovies: Movie[],
  horrorMovies: Movie[],
  romanceMovies: Movie[],
  documentaries: Movie[],
}

const Home = ({ netflixOriginals, trendingNow, topRated, actionMovies, romanceMovies, documentaries, comedyMovies, horrorMovies }: Props) => {

  const { user } = useAuth()
  const router = useRouter()

  const [email, setEmail] = useState("")
  const signup = (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault()
    localStorage.setItem('email', email)
    router.push("/signup")
  }

  const movies = [
    { title: "Trending Now", movies: trendingNow },
    { title: "Top Rated", movies: topRated },
    { title: "Action Thriller", movies: actionMovies },
    { title: "Comedies", movies: comedyMovies },
    { title: "Scary Movie", movies: horrorMovies },
    { title: "Romance Movies", movies: romanceMovies },
    { title: "Documentaries", movies: documentaries },

  ]



  if (!user) {
    return (
      <div >
        <Head>
          <title>Netflix</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <div className='flex justify-between items-center absolute left-0 top-0  p-6 w-full z-10'>
          <Image height="40" width="100" src="/assets/netflix-logo.svg" />
          <Link href={"/login"} >
            <a className="!bg-[#e50914] block rounded py-2 px-6 font-semibold" rel="noopener noreferrer">

              Sign In
            </a>
          </Link>
        </div>
        <main className='bg-black pb-20'>
          <div className="h-screen w-full relative">
            <Image src="/assets/bg-login.jpg" layout='fill' objectFit='cover' className='  brightness-75' />
            <div className='absolute gap-4 flex flex-col items-center justify-center left-[50%] top-[50%] -translate-x-[50%] -translate-y-[50%] w-[90%] sm:max-w-[70%] '>
              <h1 className='text-3xl  text-center font-semibold sm:text-5xl'>Unlimited movies, TV shows, and more.</h1>
              <h2 className="text-xl sm:text-2xl">Watch anywhere. Cancel anytime.</h2>
              <p className="text-xl text-center">Ready to watch? Enter your email to create or restart your membership.
              </p>
              <form onSubmit={signup} className='flex flex-col gap-3 w-full items-center lg:flex-row lg:gap-0 max-w-[800px]'>
                <input onChange={(e) => setEmail(e.target.value)} type="text" placeholder='Email Address' className="w-full bg-white px-4 py-3 rounded outline-none placeholder-[gray] text-black lg:flex-1 lg:rounded-r-none" />
                <button className="bg-[#e50914] rounded py-3 lg:h-full px-6 font-bold lg:rounded-l-none flex items-center ">Get Started <ChevronRightIcon className='h-5' /></button>
              </form>
            </div>
          </div>
          <div className=''>

            <div className='h-2 w-full bg-[#333]' />
            <Tv />
            <div className='h-2 w-full bg-[#333]' />
            <Section3 />
            <div className='h-2 w-full bg-[#333]' />
            <Section4 />
            <div className='h-2 w-full bg-[#333]' />
            <Section5 />
            <div className='h-2 w-full bg-[#333]' />
            <Section6 />
            {/* <MyModal /> */}


          </div>
        </main>
      </div>
    )
  }

  return (
    <div className=" relative">
      <Head>
        <title>Netflix</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>




      <Navbar />
      <main className="">
        <Banner netflixOriginals={netflixOriginals} />
        <section>
          {movies.map(val =>
            <Row key={val.title} title={val.title} movies={val.movies} />
          )}
        </section>
      </main>

      <MyModal />
    </div>
  )
}

export default Home


export const getServerSideProps = async () => {
  const [netflixOriginals, trendingNow, topRated, actionMovies, comedyMovies, horrorMovies, romanceMovies, documentaries] = await Promise.all([
    fetch(requests.fetchNetflixOriginals).then(res => res.json()),
    fetch(requests.fetchTrending).then(res => res.json()),
    fetch(requests.fetchTopRated).then(res => res.json()),
    fetch(requests.fetchActionMovies).then(res => res.json()),
    fetch(requests.fetchComedyMovies).then(res => res.json()),
    fetch(requests.fetchHorrorMovies).then(res => res.json()),
    fetch(requests.fetchRomanceMovies).then(res => res.json()),
    fetch(requests.fetchDocumentaries).then(res => res.json()),
  ])

  return {
    props: {
      netflixOriginals: netflixOriginals.results,
      trendingNow: trendingNow.results,
      topRated: topRated.results,
      actionMovies: actionMovies.results,
      comedyMovies: comedyMovies.results,
      horrorMovies: horrorMovies.results,
      romanceMovies: romanceMovies.results,
      documentaries: documentaries.results,
    }
  }

}